{
  "name": "lusca",
  "description": "Application security for express.",
  "version": "0.1.1",
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  ],
  "author": {
    "name": "Jeff Harrell",
    "email": "jeharrell@paypal.com"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "main": "index",
  "scripts": {
    "test": "node ./node_modules/.bin/mocha ./test"
  },
  "peerDependencies": {
    "express": "*"
  },
  "devDependencies": {
    "chai": "~1.7.2",
    "mocha": "~1.12.0",
    "jshint": "*",
    "supertest": "~0.5.1",
    "express": "~3.4"
  },
  "engines": {
    "node": ">=0.8.x"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/paypal/lusca.git"
  },
  "readme": "# lusca\n\nApplication security for express.\n\n# methods\n\n```js\nvar express = require('express'),\n\tappsec = require('lusca'),\n\tserver = express();\n\nserver.use(appsec.csrf());\nserver.use(appsec.csp({ /* ... */}));\nserver.use(appsec.xframe('SAMEORIGIN'));\nserver.use(appsec.p3p('ABCDEF'));\n```\n\nOr you can opt in to all purely by config:\n\n```js\nserver.use(appsec({\n    csrf: true,\n    csp: { /* ... */},\n    xframe: 'SAMEORIGIN',\n    p3p: 'ABCDEF' \n}));\n```\n\n# appsec.csrf()\n\nEnables [Cross Site Request Forgery](https://www.owasp.org/index.php/Cross-Site_Request_Forgery_\\(CSRF\\)) (CSRF) headers.\n\nIf enabled, the CSRF token must be in the payload when modifying data or you will receive a *403 Forbidden*. To send the token you'll need to echo back the `_csrf` value you received from the previous request.\n\n\n# appsec.csp(options)\n\n* `options.policy` Object - Object definition of policy.\n* `options.reportOnly` boolean - Enable report only mode.\n* `options.reportUri` String - URI where to send the report data\n\nEnables [Content Security Policy](https://www.owasp.org/index.php/Content_Security_Policy) (CSP) headers.\n\n\n\n# appsec.xframe(value)\n\n* `value` String - The value for the header, e.g. one of DENY, SAMEORIGIN or ALLOW-FROM uri.\n\nEnables X-FRAME-OPTIONS headers to help prevent [Clickjacking](https://www.owasp.org/index.php/Clickjacking).\n\n\n\n# appsec.p3p(value)\n\n* `value` String - The compact privacy policy.\n\nEnables [Platform for Privacy Preferences Project](http://support.microsoft.com/kb/290333) (P3P) headers.\n",
  "readmeFilename": "README.md",
  "_id": "lusca@0.1.1",
  "_from": "lusca@~0.1.1"
}
